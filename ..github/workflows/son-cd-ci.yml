name: Son ci/cd build

on:
  push:
    branches:
      - main

jobs:
  # Validate
  ci-delivery-validation:
    name: CI delivery validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install node modules
        if: ${{ !env.ACT }}
        run: |
          npm ci

      - name: Build source code
        if: ${{ !env.ACT }}
        run: |
          npm run build

      - name: Run tests
        run: npm run test 
  build-and-publish-image:
    name: Build and publish image
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: [12.x]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install dependencies
      - name: Install node modules
        if: ${{ !env.ACT }}
        run: |
          npm ci

      - name: restore docker cache
        if: ${{ !env.ACT }}
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${GITHUB_SHA}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      # Build Docker image
      - name: Build Docker image
        if: ${{ !env.ACT }}
        run: |
          docker build -t sonthepham/sonpt:0.0.1-${GITHUB_SHA} -t sonthepham/sonpt:0.0.1 .

      # Authenticate to Docker registry
      - name: Login Docker Registry
        if: ${{ !env.ACT }}
        run: |
          docker login -u sonthepham -p 046cbd93-70e3-45fc-8bee-f16d90730654

      # Push the Docker image to Docker Registry
      - name: Publish Docker image
        if: ${{ !env.ACT }}
        run: |
          docker push sonthepham/sonpt --all-tags
